{"ast":null,"code":"var _jsxFileName = \"/home/brennan/homepage/src/components/Layout.js\";\nimport React from 'react';\nimport Grid from './Grid';\nexport default class Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layout: [{\n        i: 'a',\n        x: 0,\n        y: 0,\n        w: 1,\n        h: 2,\n        static: true\n      }, {\n        i: 'b',\n        x: 1,\n        y: 0,\n        w: 3,\n        h: 2,\n        minW: 2,\n        maxW: 4\n      }, {\n        i: 'c',\n        x: 4,\n        y: 0,\n        w: 1,\n        h: 2\n      }]\n    };\n  }\n\n  makeid(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  }\n\n  addElement() {\n    var layout = this.state.layout;\n    layout.push({\n      i: this.makeid(5),\n      x: 4,\n      y: 0,\n      w: 1,\n      h: 2\n    });\n    this.setState({\n      layout: layout\n    });\n  }\n\n  addSpace() {\n    var layout = this.state.layout;\n    layout.push({\n      i: \"SP-\" + this.makeid(5),\n      x: 4,\n      y: 0,\n      w: 1,\n      h: 2\n    });\n    this.setState({\n      layout: layout\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addElement.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"+\"), React.createElement(Grid, {\n      layout: this.state.layout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/brennan/homepage/src/components/Layout.js"],"names":["React","Grid","Layout","Component","constructor","props","state","layout","i","x","y","w","h","static","minW","maxW","makeid","length","result","characters","charactersLength","charAt","Math","floor","random","addElement","push","setState","addSpace","render","bind"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Grid from './Grid'\n\nexport default class Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layout: [\n        {i: 'a', x: 0, y: 0, w: 1, h: 2, static: true},\n        {i: 'b', x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4},\n        {i: 'c', x: 4, y: 0, w: 1, h: 2}\n      ]\n    }\n  }\n\n  makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n \n  addElement() {\n    var layout = this.state.layout;\n    layout.push({i: this.makeid(5), x: 4, y: 0, w: 1, h: 2});\n    this.setState({\n      layout: layout\n    })\n  }\n \n  addSpace() {\n    var layout = this.state.layout;\n    layout.push({i: \"SP-\"+this.makeid(5), x: 4, y: 0, w: 1, h: 2});\n    this.setState({\n      layout: layout\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.addElement.bind(this)}>+</button>\n        <Grid layout={this.state.layout} />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}