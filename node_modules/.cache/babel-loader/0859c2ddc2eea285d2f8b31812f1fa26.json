{"ast":null,"code":"var _jsxFileName = \"/home/brennan/homepage/src/components/Grid.js\";\nimport React from 'react';\nimport GridLayout from 'react-grid-layout';\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(GridLayout, {\n      onLayoutChange: this.props.onLayoutChange.bind(this),\n      className: \"layout\",\n      layout: this.props.layout,\n      cols: 12,\n      rowHeight: 30,\n      width: 1200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.layout.map(elem => {\n      if (elem.i.includes(\"SP-\")) {\n        return React.createElement(\"div\", {\n          onMouseDown: this.props.elementSelector.bind(this, elem.i),\n          className: elem.i === this.props.selected ? \"grid-selected\" : \"react-grid-space\",\n          key: elem.i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          onMouseDown: this.props.elementSelector.bind(this, elem.i),\n          className: elem.i === this.props.selected ? \"grid-selected\" : \"\",\n          key: elem.i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, elem.i);\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/brennan/homepage/src/components/Grid.js"],"names":["React","GridLayout","Grid","Component","constructor","props","render","onLayoutChange","bind","layout","map","elem","i","includes","elementSelector","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,cAAc,EAAE,KAAKD,KAAL,CAAWE,cAAX,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AAAkE,MAAA,SAAS,EAAC,QAA5E;AAAqF,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MAAxG;AAAgH,MAAA,IAAI,EAAE,EAAtH;AAA0H,MAAA,SAAS,EAAE,EAArI;AAAyI,MAAA,KAAK,EAAE,IAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKJ,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAC5B,UAAIA,IAAI,CAACC,CAAL,CAAOC,QAAP,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,eAAO;AAAK,UAAA,WAAW,EAAE,KAAKR,KAAL,CAAWS,eAAX,CAA2BN,IAA3B,CAAgC,IAAhC,EAAsCG,IAAI,CAACC,CAA3C,CAAlB;AAAiE,UAAA,SAAS,EAAGD,IAAI,CAACC,CAAL,KAAW,KAAKP,KAAL,CAAWU,QAAvB,GAAiC,eAAjC,GAAiD,kBAA7H;AAAiJ,UAAA,GAAG,EAAEJ,IAAI,CAACC,CAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,eAAO;AAAK,UAAA,WAAW,EAAE,KAAKP,KAAL,CAAWS,eAAX,CAA2BN,IAA3B,CAAgC,IAAhC,EAAsCG,IAAI,CAACC,CAA3C,CAAlB;AAAiE,UAAA,SAAS,EAAGD,IAAI,CAACC,CAAL,KAAW,KAAKP,KAAL,CAAWU,QAAvB,GAAiC,eAAjC,GAAiD,EAA7H;AAAiI,UAAA,GAAG,EAAEJ,IAAI,CAACC,CAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+ID,IAAI,CAACC,CAApJ,CAAP;AACD;AACF,KAND,CAFJ,CADF,CADF;AAeD;;AArB+C","sourcesContent":["import React from 'react'\nimport GridLayout from 'react-grid-layout';\n\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div>\n        <GridLayout onLayoutChange={this.props.onLayoutChange.bind(this)} className=\"layout\" layout={this.props.layout} cols={12} rowHeight={30} width={1200}>\n          {\n            this.props.layout.map(elem => {\n              if (elem.i.includes(\"SP-\")) {\n                return <div onMouseDown={this.props.elementSelector.bind(this, elem.i)} className={(elem.i === this.props.selected)?\"grid-selected\":\"react-grid-space\"} key={elem.i}></div>\n              } else {\n                return <div onMouseDown={this.props.elementSelector.bind(this, elem.i)} className={(elem.i === this.props.selected)?\"grid-selected\":\"\"} key={elem.i}>{elem.i}</div>\n              }\n            })\n          }\n        </GridLayout>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}