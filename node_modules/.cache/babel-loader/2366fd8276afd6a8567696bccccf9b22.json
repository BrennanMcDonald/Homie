{"ast":null,"code":"var _jsxFileName = \"/home/brennan/homepage/src/components/Grid.js\";\nimport React from 'react';\nimport GridLayout from 'react-grid-layout';\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: \"100vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(GridLayout, {\n      onLayoutChange: this.props.onLayoutChange.bind(this),\n      className: \"layout\",\n      layout: this.props.layout,\n      cols: 12,\n      rowHeight: 30,\n      width: 1200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.layout.map(elem => {\n      if (elem.i.includes(\"SP-\")) {\n        return React.createElement(\"div\", {\n          onClick: this.props.elementSelector.bind(this, elem.i),\n          className: elem.i === this.props.selected[this.props.selected.length - 1] ? \"grid-selected\" : \"react-grid-space\",\n          key: elem.i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          onClick: this.props.elementSelector.bind(this, elem.i),\n          className: elem.i === this.props.selected[this.props.selected.length - 1] ? \"grid-selected\" : \"\",\n          key: elem.i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, elem.i);\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/brennan/homepage/src/components/Grid.js"],"names":["React","GridLayout","Grid","Component","constructor","props","render","width","onLayoutChange","bind","layout","map","elem","i","includes","elementSelector","selected","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,cAAc,EAAE,KAAKF,KAAL,CAAWG,cAAX,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AAAkE,MAAA,SAAS,EAAC,QAA5E;AAAqF,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,MAAxG;AAAgH,MAAA,IAAI,EAAE,EAAtH;AAA0H,MAAA,SAAS,EAAE,EAArI;AAAyI,MAAA,KAAK,EAAE,IAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAC5B,UAAIA,IAAI,CAACC,CAAL,CAAOC,QAAP,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,eAAO;AACL,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,eAAX,CAA2BN,IAA3B,CAAgC,IAAhC,EAAsCG,IAAI,CAACC,CAA3C,CADJ;AAEL,UAAA,SAAS,EAAGD,IAAI,CAACC,CAAL,KAAW,KAAKR,KAAL,CAAWW,QAAX,CAAoB,KAAKX,KAAL,CAAWW,QAAX,CAAoBC,MAApB,GAA2B,CAA/C,CAAZ,GAA+D,eAA/D,GAA+E,kBAFrF;AAGL,UAAA,GAAG,EAAEL,IAAI,CAACC,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,OALD,MAKO;AACL,eAAO;AACL,UAAA,OAAO,EAAE,KAAKR,KAAL,CAAWU,eAAX,CAA2BN,IAA3B,CAAgC,IAAhC,EAAsCG,IAAI,CAACC,CAA3C,CADJ;AAEL,UAAA,SAAS,EAAGD,IAAI,CAACC,CAAL,KAAW,KAAKR,KAAL,CAAWW,QAAX,CAAoB,KAAKX,KAAL,CAAWW,QAAX,CAAoBC,MAApB,GAA2B,CAA/C,CAAZ,GAA+D,eAA/D,GAA+E,EAFrF;AAGL,UAAA,GAAG,EAAEL,IAAI,CAACC,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGSD,IAAI,CAACC,CAHd,CAAP;AAID;AACF,KAZD,CAFJ,CADF,CADF;AAqBD;;AA3B+C","sourcesContent":["import React from 'react'\nimport GridLayout from 'react-grid-layout';\n\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div style={{width:\"100vw\"}}>\n        <GridLayout onLayoutChange={this.props.onLayoutChange.bind(this)} className=\"layout\" layout={this.props.layout} cols={12} rowHeight={30} width={1200}>\n          {\n            this.props.layout.map(elem => {\n              if (elem.i.includes(\"SP-\")) {\n                return <div \n                  onClick={this.props.elementSelector.bind(this, elem.i)} \n                  className={(elem.i === this.props.selected[this.props.selected.length-1])?\"grid-selected\":\"react-grid-space\"} \n                  key={elem.i}></div>\n              } else {\n                return <div \n                  onClick={this.props.elementSelector.bind(this, elem.i)} \n                  className={(elem.i === this.props.selected[this.props.selected.length-1])?\"grid-selected\":\"\"} \n                  key={elem.i}>{elem.i}</div>\n              }\n            })\n          }\n        </GridLayout>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}